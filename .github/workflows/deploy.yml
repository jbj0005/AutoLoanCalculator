name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Preflight – verify Supabase env
        run: |
          missing=0
          for v in VITE_SUPABASE_URL VITE_SUPABASE_ANON_KEY; do
            if [ -z "${!v}" ]; then
              echo "ERROR: Missing $v. Add it under Settings → Secrets and variables → Actions." >&2
              missing=1
            else
              echo "$v=present"
            fi
          done
          # Basic sanity checks to catch common mistakes
          # 1) URL should end with .supabase.co
          case "$VITE_SUPABASE_URL" in
            https://*.supabase.co) : ;;
            *) echo "ERROR: VITE_SUPABASE_URL should look like https://<ref>.supabase.co" >&2; missing=1 ;;
          esac
          # 2) anon key should look like a JWT (contain two dots) and be reasonably long
          if [ "$(printf %s "$VITE_SUPABASE_ANON_KEY" | awk -F. '{print NF-1}')" -lt 2 ]; then
            echo "ERROR: VITE_SUPABASE_ANON_KEY doesn't look like a full JWT (expect three segments separated by dots)." >&2
            missing=1
          fi
          keylen=$(printf %s "$VITE_SUPABASE_ANON_KEY" | wc -c | tr -d ' ')
          if [ "$keylen" -lt 80 ]; then
            echo "ERROR: VITE_SUPABASE_ANON_KEY seems too short ($keylen chars). Paste the entire anon key from Supabase → Settings → API." >&2
            missing=1
          fi
          # 3) Ensure the JWT role is anon (safety: never deploy service_role to client)
          node <<'JS'
          const t = process.env.VITE_SUPABASE_ANON_KEY || '';
          try {
            const p = t.split('.')[1];
            let s = (p || '').replace(/-/g,'+').replace(/_/g,'/');
            while (s.length % 4) s += '=';
            const decoded = JSON.parse(Buffer.from(s,'base64').toString('utf8'));
            const role = decoded.role || 'unknown';
            if (role !== 'anon') {
              console.error(`ERROR: Supabase key role is "${role}". Use the anon public key, not service_role.`);
              process.exit(1);
            } else {
              console.log('JWT role=anon');
            }
          } catch (e) {
            console.warn('WARN: Could not decode JWT to verify role:', e.message);
          }
JS
          if [ "$missing" -ne 0 ]; then
            exit 1
          fi
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: Compute GitHub Pages base path
        run: |
          if [ -z "${VITE_BASE:-}" ]; then
            REPO_NAME="${GITHUB_REPOSITORY#*/}"
            echo "VITE_BASE=/${REPO_NAME}/" >> "$GITHUB_ENV"
            echo "Computed VITE_BASE=/${REPO_NAME}/"
          else
            echo "Using provided VITE_BASE=${VITE_BASE}"
            echo "VITE_BASE=${VITE_BASE}" >> "$GITHUB_ENV"
          fi
        env:
          VITE_BASE: ${{ vars.VITE_BASE }}

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          # Base path for GitHub Pages. Prefer repository variable; fallback computed from repo name.
          VITE_BASE: ${{ env.VITE_BASE }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
